#!/bin/csh -f

# usage: build_mighty_mouse region range

# pull a provisional set of mouse B6 reads for a region and assemble them
# jumping reads were first error corrected to obtain more and better alignment
# locations and then reverted back to original base sequences

# THIS WIPES OUT THE DIRECTORY AND REBUILDS IT.

echo "`date`: Running paths/build_mighty_mouse $1 $2 $3 $4 $5 $6"

# First argument: the name of the REGION directory.  The data from this run
# will go into M.musculus/babies/<region>.
set region = $1

# Second argument: the range of the mouse reference genome to grab.
# E.g. 1:10000000-10005000, standing for this range of bases on chr1. 
set range = $2

# Arguments 3 - 6: optional - they are passed to RunAllPathsLG
set extra1 = $3
set extra2 = $4
set extra3 = $5
set extra4 = $6
# define the mouse directory, and create the region inside it

# REF:  M.musculus/babies/$region
# DATA: data
# RUN:  run
set ref_global = /wga/scr1/ALLPATHS/M.musculus
set baby = /wga/scr1/ALLPATHS/M.musculus/babies
set ref = $baby/$region
set data = $ref/data
set run = $data/run
echo "RUN = $run"

/bin/rm -rf $ref
mkdir $ref
mkdir $data
echo $range > $ref/region

# create mini-genome in its own reference dir
set req_scontigs = `echo $range | grep \:` #check if region consists of list of supers

if ( $req_scontigs != "" ) then
    set tig = `echo $range | tr ':' ' ' | Col 1`
    set start = `echo $range | tr ':' ' ' | tr '-' ' ' | Col 2`
    set stop = `echo $range | tr ':' ' ' | tr '-' ' ' | Col 3`
    echo "`date`: Creating the mini-genome from single super..."
    SelectBases PRE=/ INPUT=$baby/../genome.fasta CONTIG=$tig START=$start STOP=$stop \
	OUTPUT=$ref/genome.fasta
    set super_range = chr$range
    echo "super_range" $super_range
else
    echo "`date`: Creating the mini-genome form list of supers..."
    SelectFasta PRE=/ INPUT=$baby/../genome.fasta IDS="{"$range"}" OUTPUT=$ref/genome.fasta
    set super_range = `echo ","$range | sed -e 's/\,/ super_/g'`
    echo "super_range" $super_range
endif

( cd $ref; MakeLookupTable SOURCE=genome.fasta OUT_HEAD=genome LOOKUP_ONLY=True )
MakeLookupTable SOURCE=$ref/genome.fasta OUT_HEAD=$ref/genome
cp $ref/genome.fastamb $data
FastbSizes FILE=$ref/genome.fastb TOTAL_ONLY=True REPORT=$ref/genome.size
GenomeUnipathStats GENOME=$ref/genome K=96 DOT=$ref/genome.dot

# copy ploidy file to data dir
cp $baby/../ploidy $data

# Set up the sets of lanes to extract data from.
echo "`date`: Extracting data for this region..."

# Note that 613YC.{1,2,3,4} are actually sheared jumps, sequenced to 36 bp for testing, not EcoP15I.

set FRAG_LANES="{ {6141AAAXX,613F0AAXX,613F1AAXX}.{1,2,3,4,5,6,7,8} }"


# Use ExtractFromBAM and build assembly input files.

# First extract fragment reads from Picard pipeline
ExtractFromBAM.pl TARGET_HEAD=$data/frag_reads_orig RANGE="$super_range" LANES=\""$FRAG_LANES"\" NOMINAL_READ_LEN=101

# Extract jumps from alternative BAMs with alignments obtained based on error corrected (with ECJ) reads
set alt_bam_dir = $ref_global/crtd_jump_bams

echo "`date`: Extracting jumps ..."
samtools view -h $alt_bam_dir/jump_reads_orig.corr_algnd.Solexa-29334.bam $range | SAM2CRDDump OUT_HEAD=$data/jump_reads_orig.corr_algnd.Solexa-29334 SEP=1798 DEV=200 USE_OQ=False NH=True PAIRTO=False LOG_TO_CERR=False
samtools view -h $alt_bam_dir/jump_reads_orig.corr_algnd.Solexa-29335.bam $range | SAM2CRDDump OUT_HEAD=$data/jump_reads_orig.corr_algnd.Solexa-29335 SEP=2298 DEV=250 USE_OQ=False NH=True PAIRTO=False LOG_TO_CERR=False
samtools view -h $alt_bam_dir/jump_reads_orig.corr_algnd.Solexa-30571.bam $range | SAM2CRDDump OUT_HEAD=$data/jump_reads_orig.corr_algnd.Solexa-30571 SEP=2798 DEV=300 USE_OQ=False NH=True PAIRTO=False LOG_TO_CERR=False
samtools view -h $alt_bam_dir/jump_reads_orig.Solexa-25953.bam $range | SAM2CRDDump OUT_HEAD=$data/jump_reads_orig.Solexa-25953 SEP=6448 DEV=650 USE_OQ=False NH=True PAIRTO=False LOG_TO_CERR=False

# Merging jumping read sets
MergeReadSets NO_HEADER=True DIR=$data READS_IN="{jump_reads_orig.corr_algnd.Solexa-29334.fastb,jump_reads_orig.corr_algnd.Solexa-29335.fastb,jump_reads_orig.corr_algnd.Solexa-30571.fastb,jump_reads_orig.Solexa-25953.fastb}" READS_OUT=jump_reads_orig
echo "`date`: Done with jumps."

if ( $extra1 == "PREFILTER" ) then
     FilterRegionalData PRE=/ DATA=$data
     set extra1 =
endif

# Check that all the data was generated properly.
if ( ! -e $data/frag_reads_orig.fastb || ! -e $data/jump_reads_orig.fastb ) then
    echo "ERROR: Output was not properly generated by ExtractFromBAM.  Exiting."
    exit
endif


# Run!
RunAllPathsLG \
    ALLPATHS_BASE=projects/ALLPATHS REFERENCE_NAME=M.musculus/babies/$region \
    DATA_SUBDIR=data RUN=run OVERWRITE=True \
    TARGETS=small_genome EVALUATION=FULL $extra1 $extra2 $extra3 $extra4

MakeReadInfo PRE=/ DATA=$data RUN=run

echo ""
HyperToReftigs PRE=/ DATA=$data RUN=run K=96 READS=all_reads ORIGIN=$start

echo ""
echo "`date`: done"
