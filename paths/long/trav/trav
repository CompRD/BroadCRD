#!/bin/csh

# trav: assemble a human region and report results using a controlled vocabulary.  
# The first applicable state of the following is reported:
# - LongProto failed [if it crashed]
# - no components! [if assembly has no components]
# - inversion [if assembly inversion is nontrivial]
# - gap or n gaps [if assembly has > 1 component]
# - n extra edges [if efasta assembly has more than one edge]
# - n favor ref [if n reads favor the reference over the assembly]
# - validates [if none of the above].

# usage:
# trav chr start stop outhead executable extras
#
# required environment variables:
# - TRAV_CRD: directory for putting some stuff
# - TRAV_LCRD: directory for putting some other stuff
# 
# required args:
# - chr = chromosome record number (1 = chr1)
# - start = start on chromosome, in Mb (e.g. 10.15)
# - stop = stop on chromosome, in Mb
#
# optional args:
# - outhead = argument passed to LongProto for file naming, default = aaa
# - executable = name of executable, default = LongProto
# - extra arguments to pass to LongProto; if first is 'control', exclude internal
#   list of extra arguments; default = null.

# Define region and executable.

set region = "{$1}:{$2}M-{$3}M"
set executable = $5
if ( $executable == "" ) set executable = LongProto

# Define extra arguments.

set extra1 = $6
set extras =
if ( $extra1 != "control" ) then
     set extras = ""
else
     set extra1 =
endif

# Define LongProto command core.

set core = "$executable SAMPLE=human READS=#picard $extras $extra1 $7 $8 $9"

# Launch LongProto.

set head = $4
if ( $head == "" ) set head = aaa
$core TMP= $TRAV_LCRD/tmp.xxx OUT_INT_HEAD= $TRAV_CRD/$head \
     OUT_HEAD= $TRAV_CRD/$head.end X=$region OUT_GENOME= $TRAV_LCRD/genome.fastb \
     LOGGING=PRINT_FAVORING_REF=True \
     HEURISTICS=INJECT_REF=False >& $TRAV_LCRD/xxx

# Evaluate results.

if ( $status != 0 ) then
     echo "STATUS: LongProto failed"
     mail -s "trav $1 $2 $3 failed" $user < $TRAV_LCRD/xxx
     exit
endif
paths/long/trav/trav.eval $TRAV_LCRD/xxx
