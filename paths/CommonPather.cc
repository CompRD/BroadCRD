///////////////////////////////////////////////////////////////////////////////
//                   SOFTWARE COPYRIGHT NOTICE AGREEMENT                     //
//       This software and its documentation are copyright (2011) by the     //
//   Broad Institute.  All rights are reserved.  This software is supplied   //
//   without any warranty or guaranteed support whatsoever. The Broad        //
//   Institute is not responsible for its use, misuse, or functionality.     //
///////////////////////////////////////////////////////////////////////////////

/// Program: CommonPather
///
/// Pathing tool that will path multiple sets of reads (and/or unibases)
/// into the same kmer space.
///
/// If DIR_IN is not specified, then the list of fastb and output files
/// given in READS_IN and PATHS_OUT should include the full directory path.
///
/// If PATHS_OUT is not specified then the list of fastb files should exclude
/// the .fastb extensions. The output paths filenames will be generated by
/// appending .paths.kN

#include "MainTools.h"
#include "Basevector.h"

#include "paths/CommonPatherCore.h"

int main( int argc, char *argv[] )
{
  RunTime( );

  BeginCommandArguments;
  CommandArgument_Int(K);
  CommandArgument_StringSet_Doc(READS_IN, "Fastb files to path");
  CommandArgument_StringSet_OrDefault_Doc(PATHS_OUT, "",
    "Output paths filenames");
  CommandArgument_String_OrDefault_Doc(DIR_IN, "",
    "Location of fastb files and output");
  CommandArgument_UnsignedInt_OrDefault_Doc(NUM_THREADS, 0, 
    "Number of threads to use (use all available processors if set to 0)");
  CommandArgument_String_OrDefault_Doc(CHECKPOINT_HEAD, "", 
     "Header for temp files for checkpointing, so that you can start where you left off.");
  EndCommandArguments;

  // Thread control
   
  NUM_THREADS = configNumThreads(NUM_THREADS);

  if (PATHS_OUT.nonempty()) {
    if (DIR_IN == "")
      CommonPather(K, READS_IN, PATHS_OUT, NUM_THREADS, CHECKPOINT_HEAD);
    else 
      CommonPather(K, DIR_IN, READS_IN, PATHS_OUT, NUM_THREADS, CHECKPOINT_HEAD);
  } else {
    if (DIR_IN == "") {
      InputErr("You must specify PATHS_OUT and/or DIR_IN");
    } else
      CommonPather(K, DIR_IN, READS_IN, NUM_THREADS, CHECKPOINT_HEAD);
  }
}
