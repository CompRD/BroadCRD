#!/usr/bin/env python

###############################################################################
#                    SOFTWARE COPYRIGHT NOTICE AGREEMENT                      #
#        This software and its documentation are copyright (2012) by the      #
#    Broad Institute.  All rights are reserved.  This software is supplied    #
#    without any warranty or guaranteed support whatsoever. The Broad         #
#    Institute is not responsible for its use, misuse, or functionality.      #
###############################################################################

# Iterate through the records in a PacBio BAM/SAM file and remove all but
# one subread generated by each well. The subread kept will be the one that
# covers the longest stretch of the genome (in the mapped+deleted bases
# sense).

# Original author: Michael G. Ross <mgross@broadinstitute.org>

import re
import sys

from BroadCRD.util.Samtools import openbam

def compute_length(cigar):
    reflen = 0
    for refops in re.finditer('(\d+)[MX=DN]', cigar):
        reflen += int(refops.group(1))
    return reflen

def main(argv):
    samfile_name = argv[1]
    
    best_recs = {}
    
    with openbam(samfile_name, header=True) as samfile:
        for rec in samfile:
            if rec[0] == '@':
                print rec,
            else:
                fields = rec.split('\t')
                if not (int(fields[1]) & 0x100): # ignore secondary alignments
                    wellname = re.match('^(.*/.*)/', fields[0]).group(1)
                    reflength = compute_length(fields[5])
                    if (wellname not in best_recs or
                        best_recs[wellname][0] < reflength):
                        best_recs[wellname] = (reflength, rec)
    
    for wellname in best_recs:
        print best_recs[wellname][1],
    
    return 0

if __name__ == '__main__':
    exit(main(sys.argv))
