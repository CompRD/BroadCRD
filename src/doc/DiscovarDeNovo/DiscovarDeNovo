=======================
DISCOVAR de novo Manual
=======================


Introduction
============

DISCOVAR de novo is a new fully de novo genome assembler. Its inputs are designed to optimize quality while keeping costs low. Currently it takes as input Illumina reads of length 250 or longer — produced on MiSeq or HiSeq 2500 — and from a single PCR-free library. These data enable a level of completeness and continuity that was not previously possible.


The best source of current news and information on DISCOVAR is our blog:
http://www.broadinstitute.org/software/discovar/blog/


Here you will find announcements, FAQ, links to the latest code, manual and test data, build requirements and instructions. We recommend that our blog page be your starting point whenever you have problems, questions or are just looking for the latest version.


You should also consider joining the DISCOVAR user forum:
https://groups.google.com/a/broadinstitute.org/forum/?hl=en&fromgroups#!forum/discovar-user-forum


The help section of our blog should be your starting point if you encounter problems:
http://www.broadinstitute.org/software/discovar/blog/?page_id=19



Requirements
============

To compile and run DISCOVAR you will need a 64-bit Linux/UNIX system with at least 32 GB of RAM. Our software does not run on 32-bit machines.


The DISCOVAR source code is available for download via our ftp site:
ftp://ftp.broadinstitute.org/pub/crd/DiscovarDeNovo/

We do not issue official releases. Instead, please download the latest version from our nightly builds. Only builds that pass our internal tests are made available in this way - we do not release broken builds.


The g++ compiler from GCC, version 4.7.0 or higher.
http://gcc.gnu.org/


The GMP library compiled with the C++ interface. Your GCC installation may already include GMP.
http://gmplib.org /


The jemalloc replacement MALLOC library, version 3.6.0 or higher.
http://www.canonware.com/jemalloc/


We also recommend:

The graph command dot from the GraphViz package - to visualize assembly graphs.
http://www.graphviz.org/


The Picard set of Java-based command-line utilities for SAM and BAM file manipulation.
http://picard.sourceforge.net/


The SAMtools command-line utilities for SAM and BAM file manipulation.
http://samtools.sourceforge.net/



License
=======

See the license in the file: LICENSE



Building
========

See instructions in the file: INSTALL



Performance
===========

On systems we have tested on, allowing per-thread memory management will improve computational performance.  If not already enabled by default, you can achieve this using:

setenv MALLOC_PER_THREAD 1



Testing
=======

Example data, along with instructions are available via our FTP site. Before attempting to run DISCOVAR with your own data, please first try the examples available via our FTP site:

    ftp://ftp.broadinstitute.org/pub/crd/DiscovarDeNovo/

We recommend you examine the example data files and scripts if you encounter any problems setting up your own assembly. They may help you clarify the input requirements of DISCOVAR de novo.



Generating sequencing data
==========================

DISCOVAR has specific requirements for input data, and will likely fail if you do not meet them. 

DISCOVAR requires a single Illumina fragment (paired end) library. The fragment size should be approximately 450 bp, from which are generated 250 base paired end reads – using either Illumina MiSeq or HiSeq 2500 genome sequencers.  Illumina reads longer than 250 bases also work. The reads should be inward facing - reading towards the center of the fragment.

We strongly recommend using data generated by a PCR-free protocol. As per the Illumina protocol, you should not use a gel to size select.

The recommended coverage is about 60x. Somewhat higher or lower coverage is fine.

DISCOVAR does not require a jumping library and cannot currently use one. Nor can it  use 100 base Illumina reads, or reads from other sequencing technologies at this time. However we are investigating new technologies that might extend DISCOVAR’s capabilities.

Sequencing data requirements summary:

	   Illumina MiSeq or HiSeq 2500 genome sequencers
	   PCR-free library preparation
	   250 base paired end reads (or longer)
	   ~450 base pair fragment size
	   ~60x coverage



Input files
===========

Typically DISCOVAR de novo should be run with the raw reads from the sequencer, without any filtering. There may be exceptions to this, depending on how the data was generated.

DISCOVAR de novo can accept reads in BAM, fastq (+compressed with gzip) or fastb/qualb format. Reads can even be grouped together by sample and assembled together. For more information on the full range of options provided by the READS argument see the documentation file DDN_input_spec.

In the simplest case, where there is a single sample split over one or more files, the name of the input file is specified with the required argument READS:

    READS=filename

Multiple files are specified using a comma separated list:

    READS=filename1,filename2,...

Alternatively, the files can be specified in a separate file contain a list of filenames, one per line:

    READS=@list-filename

More complex expressions may be used with the READS argument. See the file DDN_input_spec for more information.

If you encounter any issues importing your BAM files into DISCOVAR, try examining your BAMs using the SAMtools or Picard toolsets.

Note that reads in the BAM files may be mapped or unmapped - any alignment information present in the BAMs is not used in the assembly process.



Running DISCOVAR de novo 
========================

DISCOVAR can currently de novo assemble genomes up to ~3 Gb in size.  All that is required are paired end reads, contained within one or more BAM, fastq or fastb files. See the previous section for details on generating the appropriate sequence data and the file requirements.


The syntax for DISCOVAR de novo assembly is:

    DiscovarDeNovo READS=bam-filenames OUT_DIR=output-dir

For example:

    DiscovarDeNovo READS=reads.bam OUT_DIR=my_assembly

This will take as input all the reads in the BAM file reads.bam, generate an assembly, then write the output to the directory my_assembly. The location of the final assembly files is: my_assembly/a.final/



Aligning the assembly to a reference genome 
===========================================

If a reference genome fasta is available, DISCOVAR de novo can align the final assembly to it. This allows you to explore the assembly graph using reference coordinates with NhoodInfo. The reference genome is NOT used in the assembly process and will not perturb the results.

The syntax for assembly and then alignment is:

    DiscovarDeNovo READS=bam-filenames OUT_DIR=output-dir REFHEAD=reference-filehead

For example:

    DiscovarDeNovo READS=reads.bam OUT_DIR=my_assembly REFHEAD=genome

Where the reference file is called genome.fasta and is accompanied by a corresponding genome.names file.

The names file should contain a simple list of contig/scaffold/chromosome names, one per line in plain text format. These are the names used by the SEEDS argument in NhoodInfo. For each record in the fasta file there should be a line in the names file. If no names file is supplied, then DiscovarDeNovo will attempt to create one using the record names in the fasta file - simplifying the names by truncating at the first space or fasta name separator. We recommend you prepare your own names file rather than rely on the automatic name extraction process - which is easily confused.



Viewing a DISCOVAR de novo assembly
===================================

The assembly graph produced by DISCOVAR de novo can be explored using the tool NhoodInfo, which is part of the DISCOVAR package. Please see the NhoodInfo manual for more details.



Brief guide to the assembly output
==================================

A DISCOVAR de novo  assembly is a graph whose edges represent DNA sequences.  Within any assembly one can find regions that are essentially linear. We call these lines.

                 /---\            /---\
-----------------     ------------     ------------------
                 \---/            \---/

This line has two cells.  In this case, for each cell, there are two paths across the cell.


Multiple paths within a cell may reflect biological differences, such as heterozygous sites, or somatic mutations.  Similarly a line could represent multiple, highly similar loci (which would be reflected in the observed copy number).  Partial phasing will sometimes lead to more than two paths. However multiple paths can also represent non-biological differences, such as those arising at loci that are very hard to sequence, and for which consequently the assembly is unable to determine the exact sequence, instead providing alternatives.

We allow cells having no paths across, representing captured gaps, and displayed in files below using 100 Ns.

DISCOVAR de novo assemblies are symmetric: for each edge, there is a reverse complement edge, and for each line, there is a reverse complement line.


DISCOVAR de novo provides several output forms from which you can select:

    a.fasta = fasta file of edges

    a.lines = binary file of lines, mathematically a vec<vec<vec<vec<int>>>>, in which the ints are edge ids.

    a.lines.efasta = standard scaffold efasta file, which shows {s1,...,sn} for the ALTERNATIVES associated to a given cell. *

    a.lines.fasta = standard scaffold fasta file, obtained by taking the highest coverage path through each cell; LOSES INFORMATION! *

    a.lines.src = human-readable form of a.lines, represented using nested brackets {...}

    * 'Duplicate' reverse complement lines have been removed from these files. Also for circular chromosomes or episomes, the header line is labeled 'circular' and the ends of the sequence overlap by exactly K-1 bases (K = 200).


-------------
End of Manual

Computational Research and Development Group
Broad Institute of MIT and Harvard
Cambridge, United States of America

