#!/usr/bin/perl -w

#Generate all the varieties of CommandArgs macros, and put them in 
#ParsedArgsAuto.h

my $out = "system/ParsedArgsAuto.h";
system("cp Copyright.h $out");
open(OUT, ">>$out") || die "Could not open $out";
print OUT "\n//File automatically generated by makeParsedArgsAuto.pl\n",
"//DO NOT EDIT BY HAND!\n\n";

#This hash contains all the types we write CommandArg.. macros for.
# The key is the type itself, and the value is an array as follows:
# [ NameForMacro, StringForSettingDefaultValue, makeValid ]
# The second parameter will be "" for any classes, which will just
# get default initialized.
# The third paramter controls which variants will be generated for this type
# set 1 to generate, 0 to ignore - see order in @variants


%types = ("int",               ["Int",                "=0", "1111"],
          "unsigned int",      ["UnsignedInt",        "=0", "1111"],
          "longlong",          ["LongLong",           "=0", "1111"],
	  "double",            ["Double",             "=0", "1111"],
	  "String",            ["String",               "", "1111"],
	  "Bool",              ["Bool",           "=False", "1101"],

	  "vec<int>",          ["IntSet",               "", "1101"],
#	  "vec<unsigned int>", ["UnsignedIntSet",       "", "1101"],
	  "vec<longlong>",     ["LongLongSet",          "", "1101"],
	  "vec<double>",       ["DoubleSet",            "", "1101"],
	  "vec<String>",       ["StringSet",            "", "1101"]);
#         "vec<Bool>",         ["BoolSet",              "", "1101"]);


# Need to keep the variants in order, so we use arrays and not a hash.
@variants = qw(Abbr OrDefault Valid Doc);
@varnames = qw(ABBR DEFAULT VALID DOC);
#Only stringify ABBR
@stringify = ("#","","","");

@options = qw(0000 0001 0010 0011 0100 0101 0110 0111 1000 1001 1010 1011 1100 1101 1110 1111);

foreach $t (keys(%types)) {
  $name = $types{$t}[0];
  $default = $types{$t}[1];
  @allowedVariants = split(//,$types{$t}[2]);
  

#print ("\n\nkey $t, value $name\n\n");
  foreach $opt (@options) {
    @pars = ("\"\"", "\"<required>\"", "\"\"", "\"\"");
    @use = split(//,$opt);
    $macroName = "CommandArgument_$name";
    $params = "(NAME";

    $skip = 0;
    foreach my $i ((0,1,2,3)) {
      #print "\n\nuse for $i is: ", $use[$i], "\n\n";
      if ($use[$i] && !$allowedVariants[$i]) {
	$skip = 1;
      } elsif ($use[$i]) {
	$params .= ", " . $varnames[$i];
	$macroName .= "_" . $variants[$i];
	$pars[$i] = "$stringify[$i]$varnames[$i]";
      }
    }
    if (!$skip) {
      print OUT "#define $macroName$params) \\\n",
	"    $t NAME$default; \\\n",
	  "    command.ProcessArgs(NAME, #NAME, \"$t\", $pars[0], $pars[1], $pars[2], $pars[3]);\n",
	    "\n";
    }
  }
}
close(OUT);

      
    
  
  
